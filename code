#начни тут создавать приложение с умными заметками
from PyQt5. QtCore import Qt 
from PyQt5.QtWidgets import  (QApplication 
    ,QInputDialog 
    ,QWidget 
    ,QPushButton 
    ,QLabel 
    ,QListWidget 
    ,QLineEdit 
    ,QTextEdit 
    ,QHBoxLayout 
    ,QVBoxLayout 
)
import json

app = QApplication([])

#Интерфейс
window = QWidget()
window.setWindowTitle('Умные заметки')
window.resize(900, 600)

#Виджеты
list_notes = QListWidget()
list_notes_label = QLabel('Список заметок')

b_note_create = QPushButton('Создать заметку')
b_note_delete = QPushButton('Удалить заметку')
b_note_save = QPushButton('Сохранить заметку')

tag = QLineEdit('')
tag.setPlaceholderText('Введите тег...')
text = QTextEdit()
b_tag_add = QPushButton('Добавить к заметке')
b_tag_del = QPushButton('Открепить от заметки')
b_tag_search = QPushButton('Искать заметки по тегу')
list_tag = QListWidget()
list_tags_ladel = QLabel('Список тегов')

#лэйауты((
total_layout = QHBoxLayout()

#лейаут для панели текста
layout_text = QVBoxLayout() 
layout_text.addWidget(text)

#лейаут лабел1



#лейаут для панели с заметками и тегами
layout_notes = QVBoxLayout()
layout_notes.addWidget(list_notes_label) 
layout_notes.addWidget(list_notes)

b_list1 = QHBoxLayout()
b_list1.addWidget(b_note_create)
b_list1.addWidget(b_note_delete)
b_list2 = QHBoxLayout()
b_list2.addWidget(b_note_save)
layout_notes.addLayout(b_list1)
layout_notes.addLayout(b_list2)

layout_notes.addWidget(list_tags_ladel)
layout_notes.addWidget(list_tag)
layout_notes.addWidget(tag)
b_tag1 = QHBoxLayout()
b_tag1.addWidget(b_tag_add)
b_tag1.addWidget(b_tag_del)
b_tag2 = QHBoxLayout()
b_tag1.addWidget(b_tag_search)

layout_notes.addLayout(b_tag1)
layout_notes.addLayout(b_tag2)

total_layout.addLayout(layout_text, stretch = 2)
total_layout.addLayout(layout_notes, stretch = 1)

window.setLayout(total_layout)

def show_result():
    key = list_notes.selectedItems()[0].text()
    print(key)
    text.setText(notes[key]['Текст'])
    list_tag.clear()
    list_tag.addItems(notes[key]['теги'])

def add_note():
    n_name, ok = QInputDialog.getText(window, "Добавить заметку", "Название заметки:")
    if ok and n_name != '':
        notes[n_name] = {'Текст' : '', 'теги' : []}
        list_notes.addItem(n_name)
        list_tag.addItems(notes[n_name]['теги'])
        with open('notes_data.json', 'w', encoding = 'UTF-8') as file:
            json.dump(notes,file, sort_keys = True)
        print(notes)

def save_note():
    if list_notes.selectedItems():
        key = list_notes.selectedItems()[0].text()
        notes[key]['Текст'] = text.toPlainText()
        with open('notes_data.json', 'w', encoding = 'UTF-8') as file:
            json.dump(notes,file, sort_keys = True)
        print(notes)
    else:
        print('Выберите заметку для сохранения!')

def del_note():
    if list_notes.selectedItems():
        key = list_notes.selectedItems()[0].text()
        del notes[key]
        list_notes.clear()
        list_tag.clear()
        text.clear()
        list_notes.addItems(notes)
        with open('notes_data.json', 'w',encoding = 'UTF-8') as file:
            json.dump(notes,file, sort_keys = True, ensure_ascii = False)
        print(notes)
    else:
        print('Выберите заметку для удаления!')

def add_tag():
    if list_notes.selectedItems():
        key = list_notes.selectedItems()[0].text()
        tag = f_tag.text()
        if not tag in notes[key]['теги']:
            notes[key]['теги'].append(tag)
            list_tag.addItem(tag)
            tag.clear()
            with open('notes_data.json', 'w',encoding = 'UTF-8') as file:
                json.dump(notes,file, sort_keys = True, ensure_ascii = False)
            print(notes)
        else:
            print('Выберите заметку что-бы добавить тег!')




list_notes.itemClicked.connect(show_result)

b_note_create.clicked.connect(add_note)
b_note_save.clicked.connect(save_note)
b_note_delete.clicked.connect(del_note)

b_tag_add.clicked.connect(add_tag)


window.show()

with open("notes_data.json", "r", encoding = 'UTF-8') as file:
    notes = json.load(file)
list_notes.addItems(notes)

app.exec()
